#! /usr/bin/env bash

# Copies file into dotfiles

script_name="$(basename "$0")"

show_usage() {
  printf "Usage: \x1b[2m%s [-h|--help] [-n|--no|--simulate] <file>...\x1b[22m\n" "$script_name" >&2
}

dry_run=

while :; do
  case $1 in
    -h|--help)
      show_usage
      exit 0 # EX_OK
      ;;
    -n|--no|--simulate)
      dry_run=yes
      ;;
    --)
      shift
      break
      ;;
    -?*)
      printf "\x1b[33m%s: unknown option (ignored): %s\x1b[39m\n" "$script_name" "$1" >&2
      ;;
    *)
      break
  esac
  shift
done

# Check that the correct number of arguments was given
if [ ! $# -ge 1 ]; then
  printf "\x1b[31m%s: wrong number of positional arguments\x1b[39m\n" "$script_name" >&2
  show_usage
  exit 64 # EX_USAGE
fi

# Check that the input is a file
for file in "$@"; do
  if [ ! -e "$file" ]; then
    printf "\x1b[31m%s: '%s' doesn't exist or is not a regular file\x1b[39m\n" "$script_name" "$file" >&2
    exit 65 # EX_DATAERR
  elif [ -L "$file" ]; then
    printf "\x1b[31m%s: '%s' is a symbolic link\x1b[39m\n" "$script_name" "$file" >&2
    exit 65 # EX_DATAERR
  fi
done

for file in "$@"; do
  file="$(realpath "$file")"
  # Check that the file is contained in home directory
  if ! echo "$file" | grep -q "$HOME"; then
    printf "\x1b[31m%s: '%s' is not in home directory\x1b[39m\n" "$script_name" "$file" >&2
    exit 65 # EX_DATAERR
  fi
  dest="${file//$HOME/$HOME/.dotfiles}"
  # Check that the file doesn't already exist, if it does ask before overwriting
  if [ -d "$dest" ] || [ -f "$dest" ]; then
    printf "\x1b[33m%s: '%s' already exists\x1b[39m\n" "$script_name" "$dest" >&2
    printf "Would you like to overwrite it? (a backup will be created) \x1b[2m[y/N]\x1b[22m " >&2
    read -r answer
    case $answer in
      [Yy]*)
        if [ -z "$dry_run" ]; then
          cp "$dest" "${dest}.bak"
          cp "$file" "$dest"
        else
          printf "\x1b[2m"'cp "%s" "%s"'"\x1b[22m\n" "$dest" "${dest}.bak" >&2
          printf "\x1b[2m"'cp "%s" "%s"'"\x1b[22m\n" "$file" "$dest" >&2
        fi
        printf "'%s' successfully overwritten!\n" "$dest" >&2
        ;;
      *)
        exit 65 # EX_DATAERR
        ;;
    esac
    continue
  fi
  # Check if file directory exists, if it doesn't ask before creating it
  dest_dir="$(dirname "$dest")"
  if [ ! -d "$dest_dir" ]; then
    printf "\x1b[33m%s: '%s' doesn't exist\x1b[39m\n" "$script_name" "$dest_dir" >&2
    printf "Would you like to create it? \x1b[2m[Y/n]\x1b[22m " >&2
    read -r answer
    case $answer in
      [Nn]*)
        exit 65 # EX_DATAERR
        ;;
      *)
        if [ -z "$dry_run" ]; then
          mkdir -p "$dest_dir"
        else
          printf "\x1b[2m"'mkdir -p "%s"'"\x1b[22m\n" "$dest_dir" >&2
        fi
        printf "'%s' successfully created!\n" "$dest_dir" >&2
        ;;
    esac
  fi
  # Copy the file into the dotfiles
  if [ -z "$dry_run" ]; then
    cp "$file" "$dest"
  else
    printf "\x1b[2m"'cp "%s" "%s"'"\x1b[22m\n" "$file" "$dest" >&2
  fi
  printf "'%s' successfully copied into '%s'!\n" "$file" "$dest" >&2
done
